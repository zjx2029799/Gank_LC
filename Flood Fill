class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        //dfs一个点出发与之相连的最大岛，把每个岛的颜色替换成newColor
        int color = image[sr][sc];
        
        if(color != newColor)
            //如果第一个是newColor，直接返回图片
           dfs(image, sr, sc, color, newColor);
        return image;
    }
    
    private void dfs(int[][] image, int sr, int sc, int color, int newColor){
        if(image[sr][sc] == color){
            image[sr][sc] = newColor; 
            if(sr - 1 >= 0) dfs(image, sr-1, sc, color, newColor);
            if(sr + 1 < image.length) dfs(image, sr+1, sc, color, newColor);
            if(sc - 1 >= 0) dfs(image, sr, sc - 1, color, newColor);
            if(sc + 1 < image[0].length) dfs(image, sr, sc+1, color, newColor);
        }
    }
}
