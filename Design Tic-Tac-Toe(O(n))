class TicTacToe {
    
    int[][] grid;
    /** Initialize your data structure here. */
    public TicTacToe(int n) {
        //generate grid
        grid = new int[n][n];
    }
    
    /** Player {player} makes a move at ({row}, {col}).
        @param row The row of the board.
        @param col The column of the board.
        @param player The player, can be either 1 or 2.
        @return The current winning condition, can be either:
                0: No one wins.
                1: Player 1 wins.
                2: Player 2 wins. */
    public int move(int row, int col, int player) {
        if(row < 0 || row >= grid.length || col < 0 || col >= grid.length)
            return 0;
        if(grid[row][col] != 0) return 0;
        grid[row][col] = player;
        if(winHor(player, row) || winVer(player, col) || winDia(player))
            return player;
        return 0;
    }
    
    private boolean winHor(int player, int row){
        for(int i=0; i<grid.length; i++){
            if(grid[row][i] != player)
                return false;
        }
        return true;
    }
    
    private boolean winVer(int player, int col){
        for(int i=0; i<grid.length; i++){
            if(grid[i][col] != player)
                return false;
        }
        return true;
    }
    
    private boolean winDia(int player){
        boolean flag1 = true;
        boolean flag2 = true;
        for(int i=0; i<grid.length; i++){
            if(grid[i][i] != player){
                flag1 = false;
            }
        }
        
        for(int i=0; i<grid.length; i++){
            if(grid[i][grid.length-i-1] != player){
                flag2 = false;
            }
        }
        
        return flag1 || flag2;
    }
}

/**
 * Your TicTacToe object will be instantiated and called as such:
 * TicTacToe obj = new TicTacToe(n);
 * int param_1 = obj.move(row,col,player);
 */
