class Solution {
   public int[] twoSum(int[] numbers, int target) {
        //由于是排好序的，所以想到用two pointer
        if(numbers == null || numbers.length == 0) return null;
        int start = 0;
        int end = numbers.length - 1;
        while(start < end){
            if(numbers[start] + numbers[end] == target)
                return new int[] {start+1, end+1};
            else if(numbers[start] + numbers[end] < target)
                start ++;
            else 
                end--;
        }
        return new int[0];
    }

    public int[] twoSum(int[] numbers, int target) {
    //原来的HashMap的方法
        if(numbers == null || numbers.length == 0) return null;
        Map<Integer, Integer> map = new HashMap<>();
        int[] res = new int[2];
        for(int i=0;i<numbers.length; i++){
            if(map.containsKey(numbers[i])){
                res[0] = map.get(numbers[i]) + 1;
                res[1] = i + 1;
            }else{
                map.put(target - numbers[i], i);
            }
        }
        return res;
    }
}
