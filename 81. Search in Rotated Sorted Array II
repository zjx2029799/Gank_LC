class Solution {
    public boolean search(int[] nums, int target) {
        if(nums == null || nums.length == 0) return false;
        int left = 0;
        int right = nums.length - 1;
        while(left <= right){
            int mid = left + (right - left) / 2;
            if(nums[mid] == target) return true;
            //right side is sorted and left is unsorted
            else if(nums[mid] < nums[left]){
                if(target > nums[mid] && target <= nums[right])
                    left = mid + 1;
                else
                    right = mid - 1;
            }else if(nums[mid] > nums[left]){
                //left side is sorted right side is unsorted
                if(target <= nums[mid] && target >= nums[left])
                    right = mid - 1;
                else
                    left = mid + 1;
            }else // nums[mid] == nums[left]  duplicate
                left++;
        }
        return false;
    }
}
