class Solution {
    
    public int subarraySum(int[] nums, int k) {
        //HashMap 快速查找sum - k是否存在
        Map<Integer, Integer> map = new HashMap<>();
        map.put(0, 1); // 为了设置当找到初始位置为0到一个点时 sum = k的情况
        int sum = 0;
        int count = 0;
        for(int i=0; i<nums.length; i++){
            sum += nums[i];
            if(map.containsKey(sum - k)){
                count += map.get(sum - k);
            }
            map.put(sum, map.getOrDefault(sum, 0) + 1);
        }
        return count;
    }
    /*
    public int subarraySum(int[] nums, int k) {
        //bruto force
        int count = 0;
        for(int i=0; i<nums.length; i++){
            int prefixsum = 0;
            for(int j=i; j<nums.length; j++){
                prefixsum += nums[j];
                if(prefixsum == k) count++;
            }
        }
        return count;
    }
    */
}


https://www.youtube.com/watch?v=aYfwus5T3Bs   解题思路prefix of sum参照视频
