class Solution {
    
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        if(n < k) return res;
        List<Integer> cur = new ArrayList<>();
        dfs(res, cur, 1, k, n);
        return res;
    }
    
    private void dfs(List<List<Integer>> res, List<Integer> cur, int index, int k, int n){
        //base case"
        if(cur.size() == k){
            res.add(new ArrayList<>(cur));
            return;
        }
        
        for(int i=index; i<=n; i++){
            cur.add(i);
            dfs(res, cur, i+1, k, n);
            cur.remove(cur.size()-1);            
        }
    }
    
}
