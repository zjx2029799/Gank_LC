/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        //binary的construct，可以想到用递归来做
        //每次找到root然后根据最大值所在的index分别递归左右子树
        return helper(nums, 0, nums.length-1);
    }
    
    private TreeNode helper(int[] nums, int start, int end){
        if(start > end) return null;
        int index = findMax(nums,start, end);
        TreeNode root = new TreeNode(nums[index]);
        root.left = helper(nums, start, index-1);
        root.right = helper(nums, index+1, end);
        return root;
    }
    
    private int findMax(int[] nums, int start, int end){
        int max = Integer.MIN_VALUE;
        int index = -1;
        for(int i=start; i<=end; i++){
            if(max < nums[i]){
                max = nums[i];
                index = i;
            }
        }
        return index;
    }
}
