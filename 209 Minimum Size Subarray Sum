class Solution {
    /*
    public int minSubArrayLen(int s, int[] nums) {
        //two pointer O(n)
        if(nums == null || nums.length == 0) return 0;
        int start = 0;
        int sum = 0;
        int res = Integer.MAX_VALUE;
        for(int i=0; i<nums.length; i++){
            sum += nums[i];
            while(sum >= s){
                res = Math.min(res, i - start + 1);
                sum -= nums[start++];
            }
            if(start > i)
                return 1;
        }
        return res == Integer.MAX_VALUE? 0: res;
    }
    */
     public int minSubArrayLen(int s, int[] nums) {
         //bruto force O(n^2)
         if(nums == null || nums.length == 0) return 0;
         int res = Integer.MAX_VALUE;
         for(int i=0; i<nums.length; i++){
             int sum = 0;
             for(int j=i; j<nums.length; j++){
                 sum += nums[j];
                 if(sum >= s)
                     res = Math.min(res, j - i + 1);
             }
         }
         return res == Integer.MAX_VALUE? 0: res;
     }
}
