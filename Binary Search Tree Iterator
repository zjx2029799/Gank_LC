/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class BSTIterator {
     Deque<TreeNode> stack;
    public BSTIterator(TreeNode root){
        stack = new LinkedList<>();
        while(root != null){
            stack.addFirst(root);
            root = root.left;
        }
    }
    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !stack.isEmpty();
    }

    /** @return the next smallest number */
    public int next() {
       TreeNode cur = stack.removeFirst();
        int val = cur.val;
        if(cur.right != null){
            cur = cur.right;
            while(cur != null){
                stack.addFirst(cur);
                cur = cur.left;
            }
        }
        return val;
    }
}

/**
 * Your BSTIterator will be called like this:
 * BSTIterator i = new BSTIterator(root);
 * while (i.hasNext()) v[f()] = i.next();
 */
