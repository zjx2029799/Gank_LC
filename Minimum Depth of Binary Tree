/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    public int minDepth(TreeNode root) {
        //recursion 2 with helper
        if(root == null) return 0;
        return helper(root);
    }
    
    private int helper(TreeNode root){
        if(root == null) return Integer.MAX_VALUE;
        if(root.left == null && root.right == null) return 1;
        int left = helper(root.left);
        int right = helper(root.right);
        return Math.min(left, right) + 1;
    }
    /*
    public int minDepth(TreeNode root) {
        //recursion分别递归两边的depth 返回小的, 如果遇到只有一颗子树，则返回左边+右边+1，否则就返回小的一边
        if(root == null) return 0;
        int left = minDepth(root.left);
        int right = minDepth(root.right);
        return (left == 0 || right == 0) ? left + right + 1: Math.min(left, right) + 1;
    }
    */
}
