class Solution {
    public void rotate(int[] nums, int k) {
        k = k % nums.length;
        nums = reverse(nums, 0, nums.length-1);
        nums = reverse(nums,0,k-1);
        nums = reverse(nums,k,nums.length-1);
    }
    
    private int[] reverse(int[] nums, int start, int end){
        while(start < end){
            int tmp = nums[start];
            nums[start++] = nums[end];
            nums[end--] = tmp;
        }
        return nums;
    }
    
    
     public void rotate(int[] nums, int k) {
       //bruto force: use another array
        k = k % nums.length; //注意！！这里必须是先对k取余，因为k可能>nums.length, 这样k steps就会折返
        int[] res = new int[nums.length];
        int index = 0;
        for(int i=k; i>0; i--){
            res[index++] = nums[nums.length - i];
        }
        for(int i=0; i<nums.length - k; i++){
            res[index++] = nums[i];
        }
        for(int i=0; i<nums.length; i++)
            nums[i] = res[i];
    }
}
