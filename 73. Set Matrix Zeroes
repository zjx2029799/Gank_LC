class Solution {
    
    public void setZeroes(int[][] matrix) {
        //space O(1) 用数组的第一行第一列去记录对应的cell是否为0，相当于给了一个坐标轴
        //最后在处理坐标轴的zero
        if(matrix == null || matrix.length == 0) return;
        boolean brow = false;
        boolean bcol = false;
        int n = matrix[0].length;
        int m = matrix.length;
        //flag the x-axis, y-axis
        for(int i=0; i<m; i++){
            if(matrix[i][0] == 0)
                brow = true;
        }
        
        for(int i=0; i<n; i++){
            if(matrix[0][i] == 0)
                bcol = true;
        }
        //set axis
        for(int i=1; i<m; i++){
            for(int j=1; j<n; j++){
                if(matrix[i][j] == 0){
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        
        for(int i=1; i<m; i++){
            for(int j=1; j<n; j++){
                if(matrix[i][0] == 0 || matrix[0][j] == 0)
                    matrix[i][j] = 0;
            }
        }
        
        //deal with axis
        if(brow){
            for(int i=0; i<m; i++)
                matrix[i][0] = 0;
        }
        
        if(bcol){
            for(int i=0; i<n; i++)
                matrix[0][i] = 0;
        }
        
    }
    
    /*
    public void setZeroes(int[][] matrix) {
        //space O(m + n)
        if(matrix == null || matrix.length == 0) return;
        int[] rows = new int[matrix.length];
        int[] cols = new int[matrix[0].length];
        for(int i=0; i<matrix.length; i++){
            for(int j=0; j<matrix[0].length; j++){
                if(matrix[i][j] == 0){
                    rows[i] = 1;
                    cols[j] = 1;
                }
            }
        }
        
        for(int i=0; i<rows.length; i++){
            if(rows[i] == 1)
                Arrays.fill(matrix[i], 0);
        }
        
        for(int j=0; j<cols.length; j++){
            if(cols[j] == 1){
                for(int k=0; k<matrix.length; k++)
                    matrix[k][j] = 0;
            }
        }
    }
    */
}
