class Solution {
    //backtrack . first solution
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        if(n < k) return res;
        int[] nums = new int[n];
        for(int i=0; i<n; i++){
            nums[i] = i+1;
        }
        backtrack(res, new ArrayList<>(), nums, k, 0);
        return res;
    }
    
    private void backtrack(List<List<Integer>> res, List<Integer> list, int[] nums, int k, int index){
        if(list.size() == k){
            res.add(new ArrayList<>(list));
            return;
        }
        
        for(int i=index; i<nums.length; i++){
            if(list.contains(nums[i]))
                continue;
            list.add(nums[i]);
            backtrack(res, list, nums, k, i+1);
            list.remove(list.size()-1);
        }
    }
}
