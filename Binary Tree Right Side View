/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        //思路是level-order traverse and 每次加入一行最右边的数
        List<Integer> res = new ArrayList<>();
        if(root == null) return res;
        Deque<TreeNode> q = new LinkedList<>();
        q.addLast(root);
        while(!q.isEmpty()){
            int size = q.size();
            for(int i=0; i<size; i++){
                TreeNode cur = q.removeFirst();
                if(cur.left != null) q.addLast(cur.left);
                if(cur.right != null) q.addLast(cur.right);
                if(i == size - 1) res.add(cur.val);
            }
        }
        return res;
    }
}
