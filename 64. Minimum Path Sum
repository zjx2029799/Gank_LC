class Solution {
    public int minPathSum(int[][] grid) {
        if(grid == null || grid[0] == null) return 0;
        int m = grid.length;
        int n = grid[0].length;
        
        int[][] dp = new int[m+1][n+1];
        Arrays.fill(dp[0], Integer.MAX_VALUE);
        
        for(int k=0; k<=m; k++){
            dp[k][0] = Integer.MAX_VALUE;
        }
        
        dp[1][1] = grid[0][0];
        for(int i=1; i<=m; i++){
            for(int j=1; j<=n; j++){
                if(!(i == 1 && j == 1)){
                    dp[i][j] = Math.min(dp[i-1][j], dp[i][j-1]) + grid[i-1][j-1];
                }      
            }
        }
        
        return dp[m][n];
    }
}
